<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:view="clr-namespace:ImageEditor.View" 
        xmlns:viewModel="clr-namespace:ImageEditor.ViewModel"
        xmlns:converter="clr-namespace:ImageEditor.Converter"
        mc:Ignorable="d" 
        x:Class="ImageEditor.View.MainView"
        x:Name="Window"
        Title="Image Editor" Height="600" Width="800"
		MinHeight="600" MinWidth="800" Icon="Resources/brush-pencil.png">
    <Window.Resources>
        <converter:ZoomConverter x:Key="ZoomConverter"/>
        <converter:BitmapToImageSourceConverter x:Key="BitmapToImageSourceConverter"/>
        <BooleanToVisibilityConverter x:Key="BoolToVis"/>
<!--        <ObjectDataProvider x:Key="HistorgamImageProvider" ObjectType="{x:Type imageEditorView:MainView}"-->
<!--                            MethodName="GetImage"/>-->
    </Window.Resources>

    <Window.DataContext>
        <viewModel:ImageEditorViewModel/>
    </Window.DataContext>

    <Grid Style="{StaticResource Back}" Drop="DropImage" DragOver="DragImageOver" AllowDrop="True">
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="230"/>
			<ColumnDefinition/>
		</Grid.ColumnDefinitions>
		<Grid.RowDefinitions>
			<RowDefinition Height="29"/>
			<RowDefinition Height="*"/>
		</Grid.RowDefinitions>

        <!-- TOOLBAR PANEL -->

        <DockPanel  Grid.Row="0" Grid.ColumnSpan="2" Style="{StaticResource Adjustments}" >
			<DockPanel Height="25" Margin="6,2,2,2" LastChildFill="False">
                <Button x:Name="Open" ToolTip="Open" Command="{Binding OpenCommand}">
                    <Image Source="Resources/opened_folder-32.png"/>
                </Button>
                <DockPanel IsEnabled="{Binding Active}">
                    <Button ToolTip="Save" Command="{Binding SaveCommand}">
                        <Image Source="Resources/save_as-25.png"/>
                    </Button>
                    <Button ToolTip="Save As"  Command="{Binding SaveAsCommand}">
                        <Image Source="Resources/save_as-32.png"/>
                    </Button>
                    <Separator Width="10" Visibility="Hidden" />
                    <Button IsEnabled="False" ToolTip="Undo">
                        <Image Source="Resources/left2_filled-25.png"/>
                    </Button>
                    <Button IsEnabled="False" ToolTip="Redo">
                        <Image Source="Resources/right2_filled-25.png"/>
                    </Button>
                    <Separator Width="10" Visibility="Hidden" />
                    <Button ToolTip="Pencil" Command="{Binding SelectToolCommand}" CommandParameter="Pencil">
                        <Image Source="Resources\Pencil-icon.png"/>
                    </Button>
                    <Button ToolTip="Brush" Command="{Binding SelectToolCommand}" CommandParameter="Brush">
                        <Image Source="Resources/brush-26.png"/>
                    </Button>
                    <Button ToolTip="Line" Command="{Binding SelectToolCommand}" CommandParameter="Line">
                        <Image Source="Resources/Editing-Line-icon.png"/>
                    </Button>
                    <Button ToolTip="Bucket" Command="{Binding SelectToolCommand}" CommandParameter="Bucket">
                        <Image Source="Resources\Paint-icon.png"/>
                    </Button>
                    <Button ToolTip="Eyedropper" Command="{Binding SelectToolCommand}" CommandParameter="Eyedropper">
                        <Image Source="Resources\Eyedropper-icon.png"/>
                    </Button>
                    <Separator Width="10" Visibility="Hidden" />
                    <xctk:ColorPicker x:Name="ColorPicker" ToolTip="Select Colour"
						    ColorMode="ColorCanvas" ShowDropDownButton="False" ShowRecentColors="True" 
						    ShowStandardColors="False" UsingAlphaChannel="False" SelectedColor="{Binding SelectedColor}"
                            Background="{x:Null}" BorderBrush="{x:Null}" />
					<Separator Width="10" Visibility="Hidden" />
                    <Button ToolTip="Select" Command="{Binding SelectToolCommand}" CommandParameter="Selection">
                        <Image Source="Resources\Cursor-Select-icon.png" />
                    </Button>
                    <Button IsEnabled="False" ToolTip="Crop" Command="{Binding CropCommand}">
                        <Image Source="Resources/crop-26.png"/>
                    </Button>
                    <Button ToolTip="Drag" Command="{Binding SelectToolCommand}" CommandParameter="Drag">
                        <Image Source="Resources\Drag-icon.png"/>
                    </Button>
                    <Separator Width="10" Visibility="Hidden" />
                    <Button ToolTip="Reset" Command="{Binding ResetCommand}">
                    	<Image Source="Resources/cancel-26.png" />
                    </Button>
                    <Separator Width="10" Visibility="Hidden" />
                    <ComboBox IsEditable="True" ToolTip="Zoom"
                              Text="{Binding Zoom, ValidatesOnExceptions=True, Converter={StaticResource ZoomConverter}}" >
                        <ComboBoxItem Content="10%"/>
                        <ComboBoxItem Content="25%"/>
                        <ComboBoxItem Content="50%"/>
                        <ComboBoxItem Content="75%"/>
                        <ComboBoxItem Content="100%"/>
                        <ComboBoxItem Content="125%"/>
                        <ComboBoxItem Content="150%"/>
                        <ComboBoxItem Content="200%"/>
                        <ComboBoxItem Content="300%"/>
                    </ComboBox>
                    <Button ToolTip="Zoom In" Command="{Binding ZoomCommand}" CommandParameter="In">
                        <Image Source="Resources/zoom_in-25.png"/>
                    </Button>
                    <Button ToolTip="Zoom Out" Command="{Binding ZoomCommand}" CommandParameter="Out">
                        <Image Source="Resources/zoom_out-25.png"/>
                    </Button>
                </DockPanel>
            </DockPanel>
        </DockPanel>



        <!-- ADJUSTMENTS PANEL -->


        <Grid Grid.Row="1" Grid.Column="0" Visibility="{Binding Active, Converter={StaticResource BoolToVis}}"
              Background="{StaticResource ButtonBrush}">
            <TabControl>

                
                <!-- FILTERS -->

                <TabItem>
					<TabItem.Header>
						<StackPanel Orientation="Horizontal">
							<Image Source="Resources/Contrast-icon.png" Height="15"/>
							<TextBlock Text=" Filters"/>
						</StackPanel>
					</TabItem.Header>
					<StackPanel Style="{StaticResource Adjustments}">
                        <Label Content="Brightness"/>
                        <Slider Margin="6,0" Value="{Binding Brightness, Mode=TwoWay}"/>
                        <Label Content="Contrast" HorizontalAlignment="Left" />
                        <Slider Margin="6,0" Value="{Binding Contrast, Mode=TwoWay}"/>
                        <Label Content="Saturation" HorizontalAlignment="Left"/>
                        <Slider Margin="6,0"  Value="{Binding Saturation, Mode=TwoWay}"/>
                        <Separator Height="15" Visibility="Hidden"/>
                        <Label Content="Red"/>
                        <Slider Margin="6,0" Value="{Binding Red, Mode=TwoWay}"/>
                        <Label Content="Green" HorizontalAlignment="Left" />
                        <Slider Margin="6,0" Value="{Binding Green, Mode=TwoWay}"/>
                        <Label Content="Blue" HorizontalAlignment="Left"/>
                        <Slider Margin="6,0" Value="{Binding Blue, Mode=TwoWay}"/>
                        <Separator Height="10" Visibility="Hidden"/>
                        <Button Content="Apply Filters"  HorizontalAlignment="Center" Command="{Binding ApplyCommand}"/>
                    </StackPanel>
				</TabItem>


                <!-- IMAGE EDIT -->

                <TabItem>
					<TabItem.Header>
						<StackPanel Orientation="Horizontal">
							<Image Source="Resources/Cursor-Move-icon.png" Height="15"/>
							<TextBlock Text=" Image"/>
						</StackPanel>
					</TabItem.Header>
					<StackPanel Style="{StaticResource Adjustments}">
						<Separator Height="25" Visibility="Hidden"/>
						<DockPanel HorizontalAlignment="Center">
							<Label Content="Height" HorizontalAlignment="Right"/>
							<xctk:IntegerUpDown Minimum="1" ParsingNumberStyle="Integer" Width="55" Maximum="9000"
                                                Value="{Binding ImageWidth}"/>
						</DockPanel>
						<DockPanel HorizontalAlignment="Center">
							<Label Content=" Width"/>
							<xctk:IntegerUpDown Minimum="1" ParsingNumberStyle="Integer" Maximum="9000" Width="55"
                                                Value="{Binding ImageHeight}"/>
						</DockPanel>
						<Separator Height="25" Visibility="Hidden"/>
						<Button x:Name="Resize" Width="85" Height="25" Command="{Binding ResetCommand}">
							<DockPanel>
								<Image Source="Resources/resize-26.png" />
								<TextBlock Text=" Resize"/>
							</DockPanel>
						</Button>
						<Separator Height="25" Visibility="Hidden"/>
						<Button x:Name="RotateLeft" Height="25" Width="110" Command="{Binding RotateCommand}"
                                CommandParameter="Clockwise">
							<DockPanel>
								<Image Source="Resources/rotate-26.png" />
								<TextBlock Text=" Rotate Left"/>
							</DockPanel>							
						</Button>
                        <Button x:Name="RotateRight" Height="25"  Width="110" Command="{Binding RotateCommand}"
                                CommandParameter="AntiClockwise">
							<DockPanel>
								<Image Source="Resources/rotate_right-26.png" />
								<TextBlock Text=" Rotate Right"/>
							</DockPanel>
						</Button>
						<Separator Height="5" Visibility="Hidden"/>
                        <Button x:Name="FlipHorizontal" Height="25" Width="110" Command="{Binding FlipCommand}"
                                CommandParameter="H">
							<DockPanel>
								<Image Source="Resources/flip_horizontal-26.png" />
								<TextBlock Text=" Flip Horizontal"/>
							</DockPanel>								
						</Button>
                        <Button x:Name="FlipVertical" Width="110" Height="25" Command="{Binding FlipCommand}"
                                CommandParameter="V">
							<DockPanel>
								<Image Source="Resources/flip_vertical-26.png" />
								<TextBlock Text=" Flip Vertical"/>
							</DockPanel>															
						</Button>					
					</StackPanel>
				</TabItem>


                <!-- HISTOGRAM -->

                <TabItem>
					<TabItem.Header>
						<StackPanel Orientation="Horizontal">
							<Image Source="Resources/Line-Chart-icon.png" Height="15"/>
							<TextBlock Text=" Histogram"/>
						</StackPanel>
					</TabItem.Header>
					<StackPanel Style="{StaticResource Adjustments}">
                        <view:BitmapImageHistogram x:Name="Histogram"/>
                        <Slider Minimum="0" Maximum="255" Margin="6" Value="{Binding HistogramRight,  Mode=TwoWay}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="ValueChanged">
                                    <ei:CallMethodAction TargetObject="{Binding}" MethodName="OnHistogramBoundsChanged"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Slider>
                        <Slider Minimum="0" Maximum="255" Margin="6" Value="{Binding HistogramLeft, Mode=TwoWay}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="ValueChanged">
                                    <ei:CallMethodAction TargetObject="{Binding}" MethodName="OnHistogramBoundsChanged"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Slider>
                        <DockPanel HorizontalAlignment="Center">
                            <Button Content="Apply Shifts" HorizontalAlignment="Center" Command="{Binding ApplyCommand}"/>
                            <Button x:Name="Equalize"  Content="Equalize" HorizontalAlignment="Center"
                                Command="{Binding HistogramEqualizeCommand}"/>
                            <Button x:Name="Stretch"  Content="Stretch" HorizontalAlignment="Center"
                                Command="{Binding HistogramStretchCommand}"/>
                        </DockPanel>
					</StackPanel>
				</TabItem>


                <!-- NOISE -->

                <TabItem>
					<TabItem.Header>
						<StackPanel Orientation="Horizontal">
							<Image Source="Resources/Pixel-Art-icon.png" Height="15"/>
							<TextBlock Text=" Noise"/>
						</StackPanel>
					</TabItem.Header>
					<StackPanel Style="{StaticResource Adjustments}">
						<Label Content="Add Noise" HorizontalAlignment="Center" FontWeight="Bold"/>
						<DockPanel HorizontalAlignment="Center">
							<RadioButton Content="Salt-n-Papper" GroupName="NoiseType" Margin="6,0" 
                                         IsChecked="{Binding SaltAndPapper}"/>
							<RadioButton Content="Additive" GroupName="NoiseType" Margin="6,0" IsChecked="True"/>
						</DockPanel>
						<Label Content="Coverage"/>
                        <Slider Maximum="100"  Margin="6,0"
							 TickFrequency="10" Minimum="0" Value="{Binding NoiseCoverage, Mode=TwoWay}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="ValueChanged">
                                    <ei:CallMethodAction TargetObject="{Binding}" MethodName="OnNoiseCoverageChanged"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Slider>
                        <Button x:Name="AddNoise" Content="Apply" Width="45" Command="{Binding ApplyCommand}"/>
						<Separator Height="15" Visibility="Hidden"/>
						<Label Content="Reduce Noise" HorizontalAlignment="Center" FontWeight="Bold"/>
						<DockPanel HorizontalAlignment="Center">
							<RadioButton x:Name="MedianCheck"  Content="Median" GroupName="ReductionType" Margin="6,0" 
                                         IsChecked="{Binding Median}"/>
                            <RadioButton x:Name="Bilateral" Content="Bilateral" GroupName="ReductionType" 
                                         Margin="6,0" IsChecked="True"/>
						</DockPanel>
                        <Label Content="Radius" IsEnabled="{Binding IsChecked, ElementName=MedianCheck}"/>
                        <Slider Maximum="25" TickFrequency="2" IsEnabled="{Binding IsChecked, ElementName=MedianCheck}"
                                Minimum="1"  Value="{Binding MedianRadius, Mode=TwoWay}" Margin="6,0" 
                                SmallChange="2" LargeChange="2" IsSnapToTickEnabled="True">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="ValueChanged">
                                    <ei:CallMethodAction TargetObject="{Binding}" MethodName="OnNoiseReduceParamsChanged"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Slider>
                        <Label Content="Kernel Size" IsEnabled="{Binding IsChecked, ElementName=Bilateral}"/>
                        <Slider Maximum="25" TickFrequency="2" Margin="6,0" IsEnabled="{Binding IsChecked, ElementName=Bilateral}"
                                Minimum="3" Value="{Binding KernelSize, Mode=TwoWay}"
                                LargeChange="2" SmallChange="2" IsSnapToTickEnabled="True">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="ValueChanged">
                                    <ei:CallMethodAction TargetObject="{Binding}" MethodName="OnNoiseReduceParamsChanged"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Slider>
                        <Label Content="SpatialFactor" IsEnabled="{Binding IsChecked, ElementName=Bilateral}"/>
                        <Slider Maximum="100" Margin="6,0" TickFrequency="10" IsEnabled="{Binding IsChecked, ElementName=Bilateral}"
                                    Minimum="0" Value="{Binding SpatialFactor, Mode=TwoWay}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="ValueChanged">
                                    <ei:CallMethodAction TargetObject="{Binding}" MethodName="OnNoiseReduceParamsChanged"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Slider>	
						<Label Content="ColourFactor" IsEnabled="{Binding IsChecked, ElementName=Bilateral}"/>
                        <Slider Maximum="100" TickFrequency="10" IsEnabled="{Binding IsChecked, ElementName=Bilateral}"
                                Minimum="0" Margin="6,0" Value="{Binding ColourFactor, Mode=TwoWay}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="ValueChanged">
                                    <ei:CallMethodAction TargetObject="{Binding}" MethodName="OnNoiseReduceParamsChanged"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Slider>		
						<Button x:Name="ReduceNoise" Content="Apply" Width="45" Command="{Binding ApplyCommand}"/>					
					</StackPanel>
				</TabItem>


                <!-- INPAINTING -->

                <TabItem>
					<TabItem.Header>
						<StackPanel Orientation="Horizontal">
							<Image Source="Resources/12-Magic-Hat-icon.png" Height="15"/>
							<TextBlock Text=" Inpainting"/>
						</StackPanel>
					</TabItem.Header>
					<StackPanel Style="{StaticResource Adjustments}">
						<DockPanel HorizontalAlignment="Center" Margin="6,10,0,0">
							<Label Content="Marker Color" VerticalAlignment="Center"/>
							<Border CornerRadius="5" Height="35" Width="35" Margin="10,0">
								<Border.Background>
									<SolidColorBrush Color="{Binding SelectedColor, ElementName=ColorPicker,
                                        UpdateSourceTrigger=PropertyChanged}" />
								</Border.Background>
							</Border>													
						</DockPanel>
						<Label Content="Window Size"/>
						<Slider x:Name="WindowSize" Maximum="25"  Margin="6,0"
							 TickFrequency="5" Minimum="0"  Value="{Binding LbpWindowSize, Mode=TwoWay}"/>	
						<Label Content="Inpaint Block Size"/>
						<Slider x:Name="BlockSize" Maximum="50"  Margin="6,0"
							 TickFrequency="10" Minimum="0" Value="{Binding InpaintBlockSize, Mode=TwoWay}"/>	
						<Button x:Name="Inpaint" HorizontalAlignment="Center" Margin="0,10" 
                                Command="{Binding InpaintCommand}">
							<DockPanel HorizontalAlignment="Center">
								<Image Height="32" Source="Resources/12-Magic-Hat-icon.png"/>
								<Label Content="Inpaint" VerticalAlignment="Center"/>
							</DockPanel>
						</Button>
						<Border Margin="6,0" MaxHeight="150">
							<Image x:Name="Mask"/>
						</Border>
					</StackPanel>
				</TabItem>
                
			</TabControl>
		</Grid>



        <!-- IMAGE PANEL -->


        <ScrollViewer x:Name="ImageScroller" Grid.Row="1" Grid.Column="1" HorizontalScrollBarVisibility="Auto" 
                      VerticalScrollBarVisibility="Auto" Drop="DropImage" DragOver="DragImageOver" AllowDrop="True" >
            <Border x:Name="CanvasBorder"  BorderBrush="Black" BorderThickness="1" Margin="45"
                    VerticalAlignment="Center" HorizontalAlignment="Center"
                    Width="{Binding CanvasWidth}" Height="{Binding CanvasHeight}">
				<Grid x:Name="DrawingGrid">
					<Rectangle x:Name="Selection" StrokeDashArray="3 3" Height="1" Width="1" Panel.ZIndex="1"/>
					<Image x:Name="ImageEdit"  HorizontalAlignment="Left" VerticalAlignment="Top"
                        Width="{Binding CanvasWidth}" Height="{Binding CanvasHeight}"
                        Source="{Binding ImageToDisplay, Converter={StaticResource BitmapToImageSourceConverter},
                        UpdateSourceTrigger=PropertyChanged}"
						MouseLeftButtonDown="ImageEdit_MouseDown" MouseMove="ImageEdit_MouseMove"
						MouseLeftButtonUp="ImageEdit_MouseLeftButtonUp"/>
				</Grid>				
			</Border>
		</ScrollViewer>        
	</Grid>
</Window>
