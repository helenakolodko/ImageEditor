<Application
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:Themes="clr-namespace:Xceed.Wpf.Toolkit.Themes;assembly=Xceed.Wpf.Toolkit" x:Class="ImageEditor.App"
             StartupUri="View/MainView.xaml">
    <Application.Resources>
        <SolidColorBrush x:Key="ButtonBrush" Color="#FFE6E6E6" />
        <SolidColorBrush x:Key="ButtonBorderBrush" Color="#FFA4A3A3" />
        <SolidColorBrush x:Key="PanelsBackgroundBrush" Color="#FFF3F3F3" />
        <SolidColorBrush x:Key="AdjustmentsBackgroundBrush" Color="#FFE4E4E4" />
        <SolidColorBrush x:Key="BackgroundBrush" Color="#FFC3C3C3" />
        <SolidColorBrush x:Key="TextBrush" Color="#FF3C3A3A" />

        <Style TargetType="{x:Type Label}">
            <Setter Property="Foreground" Value="{StaticResource TextBrush}" />
        </Style>
        <Style x:Key="Panels">
        	<Setter Property="Control.Background" Value="{StaticResource PanelsBackgroundBrush}"/>
        </Style>
        <Style x:Key="Adjustments">
        	<Setter Property="Control.Background" Value="{StaticResource AdjustmentsBackgroundBrush}"/>
        </Style>
        <Style x:Key="Back" TargetType="{x:Type Grid}">
        	<Setter Property="Background" Value="{StaticResource BackgroundBrush}"/>
        </Style>
        
        
        <!-- BUTTON -->
        
        <Style TargetType="{x:Type Button}">
			<Setter Property="Background" Value="{StaticResource ButtonBrush}" />
            <Setter Property="Foreground" Value="{StaticResource TextBrush}" />
            <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderBrush}"/>
            <Setter Property="Margin" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" CornerRadius="3" BorderThickness="2" BorderBrush="{TemplateBinding BorderBrush}" Padding="2">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Value="{StaticResource PanelsBackgroundBrush}" Property="Background" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Value="{StaticResource ButtonBrush}" Property="BorderBrush" />
                </Trigger>
            </Style.Triggers>
        </Style>
        
        
        <!-- INTEGER UPDOWN -->

        <Style x:Key="RepeatButtonStyle"  TargetType="{x:Type RepeatButton}">
            <Setter Property="Background" Value="{StaticResource ButtonBrush}" />
            <Setter Property="Foreground" Value="{StaticResource TextBrush}" />
            <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderBrush}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="{TemplateBinding Background}" CornerRadius="2" BorderThickness="2,1" BorderBrush="{TemplateBinding BorderBrush}" Padding="2">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Value="{StaticResource PanelsBackgroundBrush}" Property="Background" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Value="{StaticResource ButtonBrush}" Property="BorderBrush" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type xctk:ButtonSpinner}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type xctk:ButtonSpinner}">
                        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <ContentPresenter x:Name="contentPresenter" Content="{TemplateBinding Content}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                <Grid x:Name="gridContent" Grid.Column="1" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    
                                    <RepeatButton x:Name="PART_IncreaseButton" IsTabStop="{TemplateBinding IsTabStop}" 
                                                  Style="{StaticResource RepeatButtonStyle}">
                                        <RepeatButton.ContentTemplate>
                                            <DataTemplate>
                                                <Path Data="M0,3C0,3 0,4 0,4 0,4 3,4 3,4 3,4 3,3 3,3 3,3 4,3 4,3 4,3 4,4 4,4 4,4 7,4 7,4 7,4 7,3 7,3 7,3 6,3 6,3 6,3 6,2 6,2 6,2 5,2 5,2 5,2 5,1 5,1 5,1 4,1 4,1 4,1 4,0 4,0 4,0 3,0 3,0 3,0 3,1 3,1 3,1 2,1 2,1 2,1 2,2 2,2 2,2 1,2 1,2 1,2 1,3 1,3 1,3 0,3 0,3z" Focusable="False" Fill="{DynamicResource {ComponentResourceKey ResourceId=GlyphNormalForegroundKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}" HorizontalAlignment="Center" Height="4" SnapsToDevicePixels="True" VerticalAlignment="Center" Width="7"/>
                                            </DataTemplate>
                                        </RepeatButton.ContentTemplate>
                                    </RepeatButton>
                                    <RepeatButton x:Name="PART_DecreaseButton" IsTabStop="{TemplateBinding IsTabStop}" 
                                                  Grid.Row="1" Style="{StaticResource RepeatButtonStyle}">
                                        <RepeatButton.ContentTemplate>
                                            <DataTemplate>
                                                <Path Data="M0,1C0,1 0,0 0,0 0,0 3,0 3,0 3,0 3,1 3,1 3,1 4,1 4,1 4,1 4,0 4,0 4,0 7,0 7,0 7,0 7,1 7,1 7,1 6,1 6,1 6,1 6,2 6,2 6,2 5,2 5,2 5,2 5,3 5,3 5,3 4,3 4,3 4,3 4,4 4,4 4,4 3,4 3,4 3,4 3,3 3,3 3,3 2,3 2,3 2,3 2,2 2,2 2,2 1,2 1,2 1,2 1,1 1,1 1,1 0,1 0,1z" Focusable="False" Fill="{DynamicResource {ComponentResourceKey ResourceId=GlyphNormalForegroundKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}" HorizontalAlignment="Center" Height="4" SnapsToDevicePixels="True" VerticalAlignment="Center" Width="7"/>
                                            </DataTemplate>
                                        </RepeatButton.ContentTemplate>
                                    </RepeatButton>
                                </Grid>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
		<Style TargetType="{x:Type xctk:IntegerUpDown}">
            <Setter Property="Background" Value="{StaticResource PanelsBackgroundBrush}"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="Foreground" Value="{StaticResource TextBrush}" />
        </Style>
        <Style TargetType="{x:Type xctk:ColorPicker}">
            <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderBrush}"/>
            <Setter Value="{StaticResource PanelsBackgroundBrush}" Property="Background" />
        </Style>
        
        <!-- COMBOBOX -->
        
        <Style x:Key="ComboBoxTextBoxStyle" TargetType="{x:Type TextBox}">
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type TextBox}">
        				<Grid>
        					<Border CornerRadius="3,0,0,3" BorderThickness="2,2,1,2"
        						Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}">
        						<ScrollViewer x:Name="PART_ContentHost"/>
        					</Border>
        				</Grid>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <Style x:Key="ComboBoxButtonStyle" TargetType="{x:Type ToggleButton}">
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type ToggleButton}">
        				<Border Background="{StaticResource ButtonBrush}" CornerRadius="0,3,3,0" BorderThickness="1,2,2,2"
        					BorderBrush="{TemplateBinding BorderBrush}" Padding="2">
        					<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
        				</Border>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Value="{StaticResource PanelsBackgroundBrush}" Property="Background"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type ComboBox}">
            <Setter Property="Background" Value="{StaticResource PanelsBackgroundBrush}" />
            <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderBrush}"/>
            <Setter Property="Margin" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBox x:Name="PART_EditableTextBox" Style="{StaticResource ComboBoxTextBoxStyle}" 
                                     Background="{TemplateBinding Background}" Padding="3,0,0,0" 
                                     BorderBrush="{TemplateBinding BorderBrush}" Height="{TemplateBinding Height}"/>
                            <ToggleButton Grid.Column="1" Margin="0"
                                          Height="{TemplateBinding Height}" Style="{StaticResource ComboBoxButtonStyle}" 
                                          BorderBrush="{TemplateBinding BorderBrush}" Focusable="False" 
                                          Background="{TemplateBinding Background}" ClickMode="Press"
                                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                <Path Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center"
                                      Data="M 0 0 L 4 4 L 8 0 Z" Fill="{TemplateBinding BorderBrush}" />
                            </ToggleButton>
                            <ContentPresenter x:Name="ContentSite"
                                      Content="{TemplateBinding SelectionBoxItem}"
                                      ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                      ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                      VerticalAlignment="Center"
                                      HorizontalAlignment="Left"
                                      Margin="5,0,0,0"/>
                            <Popup x:Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}"
                               AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
                                <Grid x:Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}"
                                      MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder" BorderThickness="1,0,1,1"
                                            Background="{TemplateBinding Background}" 
                                            BorderBrush="{TemplateBinding BorderBrush}"/>
                                    <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" 
                                                    KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Value="{StaticResource ButtonBrush}" Property="BorderBrush" />
                </Trigger>
            </Style.Triggers>
        </Style>



        <!-- CHECKBOX -->
        
        <Style TargetType="{x:Type CheckBox}">
            <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderBrush}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource TextBrush}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <BulletDecorator Background="{TemplateBinding Background}" Cursor="Hand">
                            <BulletDecorator.Bullet>
                                <Grid Height="13" Width="13">
                                    <Border x:Name="RadioOuter" Background="{StaticResource ButtonBrush}" 
                                            BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="2"/>
                                    <Border Margin="4" x:Name="RadioMark" 
                                            Background="{TemplateBinding BorderBrush}"
                                            Visibility="Hidden" />
                                </Grid>
                            </BulletDecorator.Bullet>
                            <TextBlock Margin="3,0,0,0" Foreground="{TemplateBinding Foreground}"
                                       Background="{TemplateBinding Background}"><InlineUIContainer>
                            		<ContentPresenter />
                            	</InlineUIContainer></TextBlock>
                        </BulletDecorator>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="RadioMark" Property="Visibility" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="RadioOuter" Property="Background" Value="{StaticResource PanelsBackgroundBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        

        <!-- SLIDER -->

        <Style x:Key="SliderRepeatButton" TargetType="{x:Type RepeatButton}">
        	<Setter Property="SnapsToDevicePixels" Value="true" />
        	<Setter Property="OverridesDefaultStyle" Value="true" />
        	<Setter Property="IsTabStop" Value="false" />
        	<Setter Property="Focusable" Value="false" />
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type RepeatButton}">
        				<Border Background="Transparent"/>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <Style x:Key="SliderRepeatButton1" TargetType="{x:Type RepeatButton}">
        	<Setter Property="SnapsToDevicePixels" Value="true" />
        	<Setter Property="OverridesDefaultStyle" Value="true" />
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type RepeatButton}">
        				<Border SnapsToDevicePixels="True" Background="{StaticResource PanelsBackgroundBrush}"  
        					Height="3"/>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <Style x:Key="SliderThumb" TargetType="{x:Type Thumb}">
        	<Setter Property="SnapsToDevicePixels" Value="true" />
        	<Setter Property="OverridesDefaultStyle" Value="true" />
        	<Setter Property="BorderBrush" Value="{Binding BorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Slider}}}"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type Thumb}">
        				<StackPanel Width="24" Orientation="Vertical" >
        					<TextBlock Foreground="{StaticResource TextBrush}" HorizontalAlignment="Center"  Text="{Binding Value, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Slider}}}"/>
        					<Ellipse x:Name="Circle" HorizontalAlignment="Center" Fill="{StaticResource ButtonBrush}"
        						Stroke="{TemplateBinding BorderBrush}" StrokeThickness="2" Height="10" Width="10"/>
        				</StackPanel>
        				<ControlTemplate.Triggers>
        					<Trigger Property="IsMouseOver" Value="True">
        						<Setter TargetName="Circle" Property="Fill" Value="{StaticResource PanelsBackgroundBrush}" />
        					</Trigger>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <Style TargetType="{x:Type Slider}">
            <Setter Property="Minimum" Value="-255"/>
            <Setter Property="Maximum" Value="255"/>
            <Setter Property="TickFrequency" Value="51"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsMoveToPointEnabled" Value="True"/>
            <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderBrush}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Slider}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto"  />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <TickBar x:Name="TopTick"  Fill="{StaticResource BackgroundBrush}" VerticalAlignment="Top"   
                                      SnapsToDevicePixels="True" Grid.Row="0" Placement="Top" Height="5" 
                                      Visibility="Visible"  Margin="-10,0,-10,0"/>
                            <Border x:Name="TrackBackground" VerticalAlignment="Center"
                                    Margin="0,-10,0,0" Background="{StaticResource BackgroundBrush}" Height="3"   
                                    Grid.Row="1"/>
                            <Track Grid.Row="1" x:Name="PART_Track" Margin="0,-10,-7,0"  >
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Style="{StaticResource SliderRepeatButton1}" 
                                                  Command="Slider.DecreaseLarge" />
                                </Track.DecreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb Style="{StaticResource SliderThumb}" Margin="-7,0,0,0" />
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Style="{StaticResource SliderRepeatButton}"
                                                  Command="Slider.IncreaseLarge" />
                                </Track.IncreaseRepeatButton>
                            </Track>
                            <TextBlock Text="{Binding Minimum, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Slider}}}" Grid.Row="1" Margin="0,15,0,0"/>
                            <TextBlock Text="{Binding Maximum, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Slider}}}" Grid.Row="1" Margin="0,15,0,0" HorizontalAlignment="Right"/>
                            <TickBar x:Name="BottomTick" Fill="{StaticResource BackgroundBrush}"  
                                     SnapsToDevicePixels="True" Grid.Row="2"   Placement="Bottom" Height="4" 
                                     Visibility="Collapsed" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="TickPlacement"  Value="TopLeft">
                                <Setter TargetName="TopTick" Property="Visibility"  Value="Visible" />
                            </Trigger>
                            <Trigger Property="TickPlacement" Value="BottomRight">
                                <Setter TargetName="BottomTick"  Property="Visibility"  Value="Visible" />
                            </Trigger>
                            <Trigger Property="TickPlacement" Value="Both">
                                <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>



        <!-- RADIOBUTTON -->
        
		<Style TargetType="{x:Type RadioButton}">
            <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderBrush}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource TextBrush}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <BulletDecorator Background="{TemplateBinding Background}" Cursor="Hand">
                            <BulletDecorator.Bullet>
                                <Grid Height="13" Width="13">
                                    <Ellipse x:Name="RadioOuter" Fill="{StaticResource ButtonBrush}" 
                                            Stroke="{TemplateBinding BorderBrush}" StrokeThickness="2"/>
                                    <Ellipse Margin="4" x:Name="RadioMark" 
                                            Fill="{TemplateBinding BorderBrush}"
                                            Visibility="Hidden" />
                                </Grid>
                            </BulletDecorator.Bullet>
                            <TextBlock Margin="3,0,0,0" Foreground="{TemplateBinding Foreground}"
                                       Background="{TemplateBinding Background}"><InlineUIContainer>
                            		<ContentPresenter />
                            	</InlineUIContainer></TextBlock>
                        </BulletDecorator>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="RadioMark" Property="Visibility" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="RadioOuter" Property="Fill" Value="{StaticResource PanelsBackgroundBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        


        <!-- TABCONTROL -->

        <Style TargetType="{x:Type TabItem}">
            <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Border x:Name="Border" BorderThickness="1,2,1,0" BorderBrush="{StaticResource ButtonBorderBrush}"
                                CornerRadius="4,4,0,0" Padding="3">
                            <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Center"
                                        ContentSource="Header"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource PanelsBackgroundBrush}" />
                                <Setter TargetName="Border" Property="BorderThickness" Value="1,3,1,0" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource ButtonBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            
        </Style>
        <Style TargetType="{x:Type TabControl}">
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="Background" Value="{StaticResource PanelsBackgroundBrush}"/>
       </Style>
        
        

        <!-- SCROLLVIEWER -->
        
        <Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}">
        	<Setter Property="OverridesDefaultStyle" Value="true"/>
        	<Setter Property="IsTabStop" Value="false"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type Thumb}">
        				<Grid x:Name="Grid">
        					<Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" 
        						Height="Auto" Fill="Transparent" />
        					<Border x:Name="Rectangle1" CornerRadius="4" HorizontalAlignment="Stretch" 
        						VerticalAlignment="Stretch" Width="Auto" Height="Auto"  
        						Background="{TemplateBinding Background}" Margin="1" />
        				</Grid>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <Style TargetType="{x:Type ScrollBar}">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
            <Setter Property="Foreground" Value="{StaticResource PanelsBackgroundBrush}" />
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Width" Value="10" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="GridRoot" Width="10" Background="{TemplateBinding Background}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="0.00001*" />
                            </Grid.RowDefinitions>

                        	<Track x:Name="PART_Track" Grid.Row="0" IsDirectionReversed="true" Focusable="false">
                        		<Track.Thumb>
                        			<Thumb x:Name="Thumb" Background="{TemplateBinding Foreground}" Style="{DynamicResource ScrollThumbs}" />
                        		</Track.Thumb>
                        		<Track.IncreaseRepeatButton>
                        			<RepeatButton x:Name="PageUp" Command="ScrollBar.PageDownCommand" Opacity="0" Focusable="false" />
                        		</Track.IncreaseRepeatButton>
                        		<Track.DecreaseRepeatButton>
                        			<RepeatButton x:Name="PageDown" Command="ScrollBar.PageUpCommand" Opacity="0" Focusable="false" />
                        		</Track.DecreaseRepeatButton>
                        	</Track>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger SourceName="Thumb" Property="IsMouseOver" Value="true">
                                <Setter Property="Opacity" Value="0.8"/>
                            </Trigger>
                            <Trigger SourceName="Thumb" Property="IsMouseOver" Value="False">
                                <Setter Property="Opacity" Value="0.6"/>
                            </Trigger>
                            <Trigger SourceName="Thumb" Property="IsDragging" Value="true">
                                <Setter Value="{StaticResource ButtonBrush}" TargetName="Thumb" Property="Background" />
                            </Trigger>

                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="Orientation" Value="Horizontal">
                                <Setter TargetName="GridRoot" Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="PART_Track" Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90" />
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Width" Value="Auto" />
                                <Setter Property="Height" Value="10" />
                                <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
                                <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type ScrollViewer}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate  TargetType="{x:Type ScrollViewer}">
                        <Grid >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Grid.ColumnSpan="2" Grid.RowSpan="2" 
                                CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" 
                                CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}"
                                Content="{TemplateBinding Content}" Margin="{TemplateBinding Padding}" />
                            <ScrollBar Grid.Column="1" x:Name="PART_VerticalScrollBar" 
                                HorizontalAlignment="Right" AutomationProperties.AutomationId="VerticalScrollBar" 
                                Cursor="Arrow"  Maximum="{TemplateBinding ScrollableHeight}" Minimum="0"
                                Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" 
                                Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                ViewportSize="{TemplateBinding ViewportHeight}"/>
                            <ScrollBar Grid.Row="1" x:Name="PART_HorizontalScrollBar" 
                                Orientation="Horizontal" AutomationProperties.AutomationId="HorizontalScrollBar" 
                                Cursor="Arrow"  Maximum="{TemplateBinding ScrollableWidth}" Minimum="0"
                                Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" 
                                Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                ViewportSize="{TemplateBinding ViewportWidth}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    	
    </Application.Resources>
</Application>
